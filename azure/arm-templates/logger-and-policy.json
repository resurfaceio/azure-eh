{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "apiManagementServiceName": {
        "type": "string"
      },
      "loggerID": {
        "type": "string",
        "defaultValue": "ResurfaceLogger",
        "metadata": {
          "description": "Identifier for the Azure APIM Logger service"
        }
      },
      "eventHubsNamespaceName": {
        "type": "string",
        "defaultValue": "ResurfaceEH"
      },
      "eventHubsInstanceName": {
        "type": "string",
        "defaultValue": "ResurfaceLoggingEH"
      },
      "partitionNumber": {
        "type": "string",
        "defaultValue": "0",
        "metadata": {
          "description": "EventHubs partition"
        }
      }
    },
    "resources": [
      {
        "apiVersion": "2017-03-01",
        "type": "Microsoft.ApiManagement/service/loggers",
        "name": "[concat(parameters('apiManagementServiceName'),'/',parameters('loggerID'))]",
        "properties": {
          "loggerType": "azureEventHub",
          "description": "Resurface Logger",
          "credentials": {
            "name": "[parameters('eventHubsInstanceName')]",
            "connectionString": "[listKeys(resourceId('Microsoft.EventHub/namespaces/authorizationRules',parameters('eventHubsNamespaceName'),'RootManageSharedAccessKey'),'2017-04-01').primaryConnectionString]"
          }
        }
      },
      {
        "apiVersion": "2019-12-01",
        "type": "Microsoft.ApiManagement/service/policies",
        "name": "[concat(parameters('apiManagementServiceName'),'/policy')]",
        "properties": {
          "value": "[concat('<policies><inbound><set-variablename_x003D__x0022_request-string_x0022_value_x003D__x0022__x0040_{varbody_x003D_context.Request.Body?.As<string>(true);if(body!_x003D_null&&body.Length>1024){body_x003D_body.Substring(0,1024);}varheaders_x003D_context.Request.Headers.Where(h_x003D_>h.Key!_x003D__x0022_Authorization_x0022_&&h.Key!_x003D__x0022_Ocp-Apim-Subscription-Key_x0022_).Select(h_x003D_>string.Format(_x0022_{0}:{1}_x0022_,h.Key,String.Join(_x0022_,_x0022_,h.Value))).ToArray<string>();returnnewJObject(newJProperty(_x0022_method_x0022_,context.Request.Method),newJProperty(_x0022_url_x0022_,context.Request.Url.ToString()),newJProperty(_x0022_body_x0022_,bodyisnull?string.Empty:body),newJProperty(_x0022_headers_x0022_,headers)).ToString();}_x0022_/></inbound><backend><forward-requestfollow-redirects_x003D__x0022_true_x0022_/></backend><outbound><log-to-eventhublogger-id_x003D__x0022_',parameters('loggerID'),'_x0022_partition-id_x003D__x0022_',parameters('partitionNumber'),'_x0022_>_x0040_{varbody_x003D_context.Response.Body?.As<string>(true);if(body!_x003D_null&&body.Length>1024){body_x003D_body.Substring(0,1024);}varheaders_x003D_context.Response.Headers.Select(h_x003D_>string.Format(_x0022_{0}:{1}_x0022_,h.Key,String.Join(_x0022_,_x0022_,h.Value))).ToArray<string>();varresponse_x003D_newJObject(newJProperty(_x0022_status_x0022_,context.Response.StatusCode),newJProperty(_x0022_body_x0022_,body),newJProperty(_x0022_headers_x0022_,headers));returnnewJObject(newJProperty(_x0022_request_x0022_,context.Variables[_x0022_request-string_x0022_]),newJProperty(_x0022_response_x0022_,response.ToString())).ToString();}</log-to-eventhub></outbound></policies>')]"
        },
        "dependsOn": ["[resourceId('Microsoft.ApiManagement/service/loggers', parameters('apiManagementServiceName'), parameters('loggerID'))]"]
      }
    ],
    "outputs": {
    }
  }
